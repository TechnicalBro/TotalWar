package com.caved_in.command_executors.Admin;

import me.cybermaxke.inputgui.api.InputPlayer;
import me.cybermaxke.materialapi.inventory.CustomItemStack;

import org.apache.commons.lang.StringUtils;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import com.caved_in.TotalWar;
import com.caved_in.Handlers.HelpMenu.HelpScreen;
import com.caved_in.Handlers.ItemHandlers.ItemHandler;
import com.caved_in.ItemMenus.InputLoreMenu.AddLoreInput;
import com.caved_in.TotalWarItems.TotalWarItems;
import com.caved_in.command_executors.CommandController.CommandHandler;
import com.caved_in.command_executors.CommandController.SubCommandHandler;

public class ItemGen
{
	@CommandHandler(name = "itemgen", permission = "totalwar.admin.itemgen")
	public void ItemGenCommand(Player Player, String[] Args)
	{
		if (Args.length > 0)
		{
			if (Args[0] != null)
			{
				CustomItemStack Gen = TotalWarItems.ItemHandler.getCustomItemStack(Args[0]);
				if (Gen != null)
				{
					Player.getInventory().addItem(new ItemStack[] { Gen.getItem() });
					Player.updateInventory();
				}
				else
				{
					Player.sendMessage("That item doesn't exist...");
				}
			}
		}
		else
		{
			Player.sendMessage("To see all the available Item ID's, use /itemgen list");
			Player.sendMessage("To spawn in an item, do /itemgen <itemid>");
		}
	}
	
	@SubCommandHandler(parent = "itemgen", name = "list", permission = "totalwar.admin.itemgen")
	public void ItemIDList(Player Player, String[] Args)
	{
		HelpScreen HelpScreen = new HelpScreen("Available ItemGen Item ID's");
		HelpScreen.setHeader(ChatColor.AQUA + "<name> (Page <page> of <maxpage>)");
		HelpScreen.setFormat("<name> -- <desc>");
		HelpScreen.setFlipColor(ChatColor.GREEN, ChatColor.DARK_GREEN);
		for(String S : TotalWarItems.ItemHandler.getAllItemIDs())
		{
			HelpScreen.setEntry(S, this.getItemGenCommand(S));
		}
		
		if (Args.length == 1)
		{
			HelpScreen.sendTo(Player, 1, 7);
		}
		else
		{
			if (Args[1] != null && StringUtils.isNumeric(Args[1]))
			{
				int Page = Integer.parseInt(Args[1]);
				HelpScreen.sendTo(Player, Page, 7);
			}
		}
	}
	
	public String getItemGenCommand(String ID)
	{
		return "Generated by using: /itemgen " + ID;
	}
	
	@SubCommandHandler(parent = "itemgen", name = "addlore", permission = "totalwar.admin.itemgen")
	public void AddItemLore(Player Player, String[] Args)
	{
		if (Player.getItemInHand() != null && Player.getItemInHand().getType() != Material.AIR)
		{
			InputPlayer Sender = TotalWar.GUIAPI.getPlayer(Player);
			Sender.openGui(new AddLoreInput());
		}
	}
	
	@SubCommandHandler(parent = "itemgen", name = "addenchantment", permission = "totalwar.admin.itemgen")
	public void AddEnchantmentToItem(Player Player, String[] Args)
	{
		if (Player.getItemInHand() != null)
		{
			if (Args.length >= 2)
			{
				if (Args[1] != null)
				{
					String Ench = Args[1];
					if (Args[2] != null)
					{
						if (StringUtils.isNumeric(Args[2]))
						{
							int eLvl = Integer.parseInt(Args[2]);
							Enchantment Enchant = Enchantment.getByName(Ench);
							if (Ench != null)
							{
								ItemStack Enchanted = ItemHandler.addEnchantment(Player.getItemInHand(), Enchant, eLvl, true);
								Player.setItemInHand(Enchanted);
							}
						}
						else
						{
							Player.sendMessage("The enchantment level needs to be a number --> /itemgen addenchantment <ENCHANTMENT> <level>");
						}
					}
					else
					{
						Player.sendMessage("You need to include the enchantment level --> /itemgen addenchantment <ENCHANTMENT> <level>");
					}
				}
				else
				{
					Player.sendMessage("You need to include the enchantment to add, followed by it's level --> /itemgen addenchantment <ENCHANTMENT> <level>");
				}
			}
			else
			{
				Player.sendMessage("Not enough arguments. You've got " + Args.length + " this command requires 2 or more.");
			}
		}
	}
}
